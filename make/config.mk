#####################
# WEI Configuration	#
#####################

# Adjust these parameters to meet your needs
# You can override these at run time by running `make <target> <VARIABLE>="..."`

# Project Configuration
PROJECT_DIR := $(abspath $(MAKEFILE_DIR))
WORKCELLS_DIR := $(PROJECT_DIR)/workcell_defs
WORKCELL_FILENAME := test_workcell.yaml

# Python Configuration
PYPROJECT_TOML := $(PROJECT_DIR)/pyproject.toml
PROJECT_VERSION := $(shell grep -oP '(?<=version = ")[^"]+' $(PYPROJECT_TOML) | head -n 1)

# Docker Configuration
COMPOSE_FILE := $(PROJECT_DIR)/compose.yaml
DOCKERFILE := $(PROJECT_DIR)/Dockerfile
DOCKERFILE_TEST := $(PROJECT_DIR)/tests/Dockerfile.test
# Make sure this file is in .gitignore or equivalent
ENV_FILE := $(PROJECT_DIR)/.env
REGISTRY := ghcr.io
ORGANIZATION := ad-sdl
IMAGE_NAME := wei
IMAGE := $(REGISTRY)/$(ORGANIZATION)/$(IMAGE_NAME)

# This should match the name of your app's service in the compose file
APP_NAME := test_app
# This should be the command to run your app in the container
APP_COMMAND :=
# This is where the data from the workcell will be stored
# If these directories don't exist, they will be created
WEI_DATA_DIR := $(PROJECT_DIR)/.wei
REDIS_DIR := $(WEI_DATA_DIR)/redis
# Whether or not to send events to Diaspora (set to true to turn on)
USE_DIASPORA := false
# This is the default target to run when you run `make` with no arguments
.DEFAULT_GOAL := default

# Required commmands to use this project's Makefile
REQUIRED_COMMANDS := docker pdm pre-commit

# Makes sure all $(REQUIRED_COMMANDS) are installed/available
TEMP := $(foreach command,$(REQUIRED_COMMANDS),\
		$(if $(shell command -v $(command) 2> /dev/null),"",$(error "Couldn't find command '$(command)', is it installed?")))

########################
# Config-related Rules #
########################

# Generate our .env whenever we change our config
NOT_PHONY += .env
.env: $(MAKEFILE_LIST)
	# Generating .env
	@echo "# THIS FILE IS AUTOGENERATED, CHANGE THE VALUES IN THE MAKEFILE" > $(ENV_FILE)
	@echo "USER_ID=$(shell id -u)" >> $(ENV_FILE)
	@echo "GROUP_ID=$(shell id -g)" >> $(ENV_FILE)
# The following adds every variable in the Makefiles to the .env file,
# except for everything in ENV_FILTER and ENV_FILTER itself
	@$(foreach v,\
		$(filter-out $(ENV_FILTER) ENV_FILTER,$(.VARIABLES)),\
		echo "$(v)=$($(v))" >> $(ENV_FILE);)
