version: "3.0"
services:
  wei_server:
    image: wei
    container_name: wei_server
    build:
      context: .
      dockerfile: ./docker/Dockerfile-wei
    ports:
      - 8000:8000
    volumes:
      - ./wei:/wei/wei
      - ~/.wei:/root/.wei
    command: python -m wei.server --workcell /wei/examples/example_workcell_docker.yaml --redis_host wei_redis --port 8000
    depends_on:
      - wei_redis
  wei_engine:
    image: wei
    container_name: wei_engine
    volumes:
      - ./wei:/wei/wei
      - ~/.wei:/root/.wei
    command: python -m wei.engine --workcell /wei/examples/example_workcell_docker.yaml --redis_host wei_redis --server wei_server
    depends_on:
      - wei_redis
  wei_redis:
    image: redis
    container_name: wei_redis
    ports:
      - 6379:6379
    volumes:
      - ~/.wei/redis_data:/data
    command: redis-server --save 60 1 --loglevel warning
  sleeper_node:
    image: wei
    container_name: sleeper_node
    volumes:
      - ./wei:/wei/wei
    command: python /wei/examples/example_nodes/sleep_rest_node.py
    ports:
      - 2000:2000
  webcam_node:
    image: wei
    container_name: webcam_node
    privileged: true
    volumes:
      - ./wei:/wei/wei
      - /dev/video0:/dev/video0
    ports:
      - 2001:2001
    command: python /wei/examples/example_nodes/webcam_rest_node.py
  wei_jupyter:
    image: wei_jupyter
    container_name: wei_jupyter
    user: root
    working_dir: "/home/${USER}"
    build:
      context: .
      dockerfile: ./docker/Dockerfile-jupyter
      args:
        UID: ${UID}
        GID: ${GID}
        USER: ${USER}
    ports:
      - 8888:8888
    volumes:
      - ./examples:/home/${USER}/examples
      - ./wei:/home/${USER}/wei/wei
    environment:
      JUPYTER_ENABLE_LAB: "yes"
      JUPYTER_TOKEN: "wei"
      NB_USER: "${USER}"
      CHOWN_HOME: "yes"
      NB_UID: "${UID}"
      NB_GID: "${GID}"
